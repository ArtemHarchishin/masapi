package ch.capi.net.app{	import flash.errors.IllegalOperationError;			import ch.capi.data.Set;	
	
	/**	 * Utility class to register the named <code>IApplicationContext</code> instances. 	 * 	 * @see			ch.capi.net.app.IApplicationContext IApplicationContext	 * @author		Cedric Tabin - thecaptain	 * @version		1.0	 */	public class ApplicationContextRegisterer	{		//---------//		//Constants//		//---------//				//---------//		//Variables//		//---------//		private static var __contexts:Set	= new Set();				//--------------//		//Public methods//		//--------------//		/**		 * Enumerates all the <code>IApplicationContext</code> registered.		 * 		 * @return	An <code>Array</code> containing the names of the registered <code>IApplicationContext</code>.		 */		public static function enumerateAll():Array		{			return __contexts.keys();		}		/**		 * Retrieves the specified <code>IApplicationContext</code>.		 * 		 * @param	appCtxName	The name of the <code>IApplicationContext</code>.		 * @return	The <code>IApplicationContext</code>.		 * @throws	ch.capi.errors.DataError	If the <code>IApplicationContext</code> doesn't exist.			 */		public static function get(appCtxName:String):IApplicationContext		{			return __contexts.getValue(appCtxName) as IApplicationContext;		}		/**		 * Registers the specified <code>IApplicationContext</code>. It must be named otherwise		 * a <code>IllegalOperationError</code> will be thrown.		 * 		 * @param	context		The <code>IApplicationContext</code>.		 * @throws	IllegalOperationError	If the <code>IApplicationContext</code> is not named.		 * @throws	ch.capi.errors.DataError	If an <code>IApplicationContext</code> with the same name		 * 						already exists.		 */		public static function register(context:IApplicationContext):void		{			if (context.name == null) throw new IllegalOperationError("The ApplicationContext is not named");			__contexts.put(context.name, context);		}		//-----------------//		//Protected methods//		//-----------------//				//---------------//		//Private methods//		//---------------//	}}