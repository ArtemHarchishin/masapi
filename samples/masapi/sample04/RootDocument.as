package masapi.sample04{	import ch.capi.net.PriorityMassLoader;	
	import ch.capi.events.PriorityEvent;		import ch.capi.events.MassLoadEvent;		import ch.capi.net.ILoadableFile;		import ch.capi.net.CompositeMassLoader;				import masapi.Constants;			import flash.events.Event;	import flash.display.Sprite;			//SWF configuration	[SWF(width="500", height="500", frameRate="30", backgroundColor="#FFFFFF")]		/**	 * 	 * 	 * @author		Cedric Tabin - thecaptain	 * @version		1.0	 */	public class RootDocument extends Sprite	{		//---------//		//Variables//		//---------//		private var _compositeMassLoader:CompositeMassLoader = new CompositeMassLoader();		//-----------//		//Constructor//		//-----------//				/**		 * Creates a new <code>RootDocument</code> object.		 */		public function RootDocument():void		{			//initializes the listeners			_compositeMassLoader.addEventListener(Event.OPEN, onOpen);			_compositeMassLoader.addEventListener(Event.COMPLETE, onComplete);			_compositeMassLoader.addEventListener(MassLoadEvent.FILE_OPEN, onFileOpen);			_compositeMassLoader.addEventListener(MassLoadEvent.FILE_CLOSE, onFileClose);			_compositeMassLoader.addEventListener(PriorityEvent.PRIORITY_CHANGED, onPriorityChanged);						//initializes the loading			init();		}				//-----------------//		//Protected methods//		//-----------------//				protected function onOpen(evt:Event):void		{			trace("Massive Loading open");			}				protected function onComplete(evt:Event):void		{			trace("Massive Loading complete");		}				protected function onFileOpen(evt:MassLoadEvent):void		{			var file:ILoadableFile = evt.getFile();			trace("File open : "+file.urlRequest.url+" (queue index : "+evt.queueIndex+", static index : "+evt.staticIndex+")");		}		protected function onFileClose(evt:MassLoadEvent):void		{			var file:ILoadableFile = evt.getFile();			trace("File closed : "+file.urlRequest.url+" (close event : "+evt.closeEvent.type+")");		}				protected function onPriorityChanged(evt:PriorityEvent):void		{			trace("New priority : "+evt.currentPriority);		}		//---------------//		//Private methods//		//---------------//		private function init():void		{			//creates the variables			Constants.putConstants(_compositeMassLoader.loadableFileFactory.defaultVariables);						/*			 * This variable is will influence the whole loading process. By setting it 			 * to true, the PriorityMassLoader will load the files by priority-pack. That			 * means that before a file starts its loading, all the files with a higher priority			 * will be loaded. 			 */			var pm:PriorityMassLoader = (_compositeMassLoader.massLoader as PriorityMassLoader); 			pm.loadByPriority = true;						//put the files into the loading queue			_compositeMassLoader.addFile("${XML}/anim.xml", null, 4);			_compositeMassLoader.addFile("${PICTURES}/flash.jpg", null, 4);						//that's just another way to add the file by passing direclty an object with			//the good properties.			_compositeMassLoader.addFile({url:"${TXT}/variables.txt", priority:5});			_compositeMassLoader.addFile({url:"${PICTURES}/GNOME-GreenLandscape.jpg", priority:3});						//starts the loading			_compositeMassLoader.start();		}	}}