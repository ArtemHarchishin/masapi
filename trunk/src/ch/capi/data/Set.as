package ch.capi.data{	import ch.capi.errors.DataError;			/**	 * This class is a <code>IMap</code> that contains only unique keys. If a	 * value is already into the <code>Set</code> and a key with the same name	 * is put, then an <code>Error</code> will be thrown.	 * 	 * @author		Cedric Tabin - thecaptain	 * @version		1.0	 */	public class Set extends DictionnaryMap	{		//---------//		//Constants//		//---------//				//---------//		//Variables//		//---------//				//-----------------//		//Getters & Setters//		//-----------------//				//-----------//		//Constructor//		//-----------//				/**		 * Creates a new <code>Set</code> object.		 * 		 * @param	weakKeys		Instructs the Dictionary object to use "weak" references on object keys.		 */		public function Set(weakKeys:Boolean=false):void		{			super(weakKeys);		}		//--------------//		//Public methods//		//--------------//		/**		 * Associates the specified value with the specified key in the <code>IMap</code>.		 * If the key is already in the <code>Set</code>, then a <code>DataError</code> will		 * be thrown.		 * 		 * @param	key		The key.		 * @param	value	The value.		 * @return	The previous value mapped to the key or <code>null</code>.		 * @throws	Error	If the key is <code>null</code>.		 * @throws	ch.capi.errors.DataError	If the <code>key</code> is already in the <code>Set</code>.		 */		public override function put(key:*, value:*):*		{			if (containsKey(key)) throw new DataError("The key '"+key+"' already exists");			return super.put(key, value);		}		//-----------------//		//Protected methods//		//-----------------//				//---------------//		//Private methods//		//---------------//	}}