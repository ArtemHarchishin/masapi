package ch.capi.net.app{	import ch.capi.net.LoadableFileFactory;			import flash.xml.XMLDocument;		import flash.events.Event;		import flash.net.URLLoaderDataFormat;		import flash.net.URLLoader;			/**	 * Utility class to load and parse an xml designed to be used by an <code>ApplicationMassLoader</code>.	 * 	 * @see			ch.capi.net.app.ApplicationFile			ApplicationFile	 * @see			ch.capi.net.app.ApplicationMassLoader	ApplicationMassLoader	 * @see			ch.capi.net.app.ApplicationFileParser	ApplicationFileParser	 * @author		Cedric Tabin - thecaptain	 * @version		1.0	 */	public class ApplicationConfigLoader extends URLLoader	{		//---------//		//Constants//		//---------//				//---------//		//Variables//		//---------//		private var _parser:ApplicationFileParser;		private var _xmlConfig:XMLDocument;		//-----------------//		//Getters & Setters//		//-----------------//		/**		 * Defines the <code>ApplicationFileParser</code> that will be used		 * when the file is loaded.		 */		public function get applicationFileParser():ApplicationFileParser { return _parser; }				/**		 * Defines the <code>ApplicationContext</code> in which the <code>ApplicationFiles</code>		 * have been created. This is a direct method to retrieve the		 * <code>ApplicationContext</code> of the <code>ApplicationFileParser</code>.		 */		public function get applicationContext():ApplicationContext { return _parser.applicationContext; }				/**		 * Defines the <code>LoadableFileFactory</code>. This is a direct method to retrieve the		 * <code>LoadableFileFactory</code> of the <code>ApplicationFileParser</code>.		 */		public function get loadableFileFactory():LoadableFileFactory { return _parser.loadableFileFactory; }		/**		 * Defines the <code>XMLDocument</code> that is given to the <code>fileParser</code>. This value is available only		 * once the file is loaded.		 */		public function get configuration():XMLDocument { return _xmlConfig; }				//-----------//		//Constructor//		//-----------//				/**		 * Creates a new <code>ApplicationConfigLoader</code>.		 * 		 * @param	parser	The <code>ApplicationFileParser</code> to use.		 */		public function ApplicationConfigLoader(parser:ApplicationFileParser=null):void		{			_parser = (parser==null) ? new ApplicationFileParser() : parser;			dataFormat = URLLoaderDataFormat.TEXT;			addEventListener(Event.COMPLETE, onFileLoaded, false, 10);		}				//--------------//		//Public methods//		//--------------//		//-----------------//		//Protected methods//		//-----------------//				/**		 * This method is called when the file is loaded.		 * 		 * @param	evt		The <code>Event</code> object.		 */		protected function onFileLoaded(evt:Event):void		{			//parses the XML			var xmlConfig:XMLDocument = new XMLDocument();			xmlConfig.ignoreWhite = true;        	xmlConfig.parseXML(this.data);        	_xmlConfig = xmlConfig;						//parses the files			_parser.parseNode(xmlConfig.firstChild);		}				//---------------//		//Private methods//		//---------------//	}}