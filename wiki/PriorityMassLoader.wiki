#summary Prioritize the loading of a file
#labels HOWTO

= Introduction =

When you're loading some files, there is sometimes where you _need_ a file to be loaded before another. Using the simple [http://code.google.com/p/masapi/wiki/ParallelFiles MassLoader], the files will be loaded in the order you add them into the loading queue. But you cannot always add the files into the right order directly...


= The `PriorityMassLoader` =

Masapi provides you the `PriorityMassLoader` that allows you to specify the priority of a file :
{{{
import ch.capi.net.*;

var factory:LoadableFileFactory = new LoadableFileFactory();
var file1:ILoadableFile = factory.create("file1.swf");
var file2:ILoadableFile = factory.create("file2.swf");
var file3:ILoadableFile = factory.create("file3.swf");

var massloader:PriorityMassLoader = new PriorityMassLoader();

//creates the event functions
var onOpen:Function = function(evt:Event):void { trace("MassLoad open"); }
var onProgress:Function = function(evt:ProgressEvent):void { trace("progres..."); }
var onComplete:Function = function(evt:ProgressEvent):void { trace("complete"); }
var fileOpen:Function = function(evt:MassLoadEvent):void { trace("file open : "+(evt.target as ILoadableFile).urlRequest.url); }
var fileClose:Funnction = function(evt:MassLoadEvent):void { trace("file close : "+(evt.target as ILoadableFile).urlRequest.url); }

//register the events
massloader.addEventListener(Event.OPEN, onOpen);
massloader.addEventListener(ProgressEvent.PROGRESS, onOprogress);
massloader.addEventListener(Event.COMPLETE, onComplete);
massloader.addEventListener(MassLoadEvent.FILE_OPEN, fileOpen);
massloader.addEventListener(MassLoadEvent.FILE_CLOSE, fileClose);

//adding the files
massloader.addPriorizedFile(file1, 10);
massloader.addPriorizedFile(file2, 10);
massloader.addPriorizedFile(file3, 5);

massloader.start();
}}}

By default, all the files within the same priority are loaded at the same time. So here is the output of the code above :
{{{
open
file open : file1.swf
file open : file2.swf
progress...
progress...
progress...
file close : file1.swf
file close : file2.swf
file open : file3.swf
progress...
file close : file3.swf
complete
}}}
 
As you see the `parallelFiles` property is no more used by the `PriorityMassLoader`. If you want to keep the priority loading using the `parallelFiles` property value, just turn the `loadByPriority` property to `false` :)

= Changement of priority =

If you let the `PriorityMassLoader` managing the loading of the files by priority, you can know when the priority changes, just by listening the `PriorityEvent.PRIORITY_CHANGED` event :
{{{
import ch.capi.net.*;

var factory:LoadableFileFactory = new LoadableFileFactory();
var file1:ILoadableFile = factory.create("file1.swf");
var file2:ILoadableFile = factory.create("file2.swf");
var file3:ILoadableFile = factory.create("file3.swf");

var massloader:PriorityMassLoader = new PriorityMassLoader();

//creates the event functions
var onOpen:Function = function(evt:Event):void { trace("MassLoad open"); }
var onProgress:Function = function(evt:ProgressEvent):void { trace("progres..."); }
var onComplete:Function = function(evt:ProgressEvent):void { trace("complete"); }
var fileOpen:Function = function(evt:MassLoadEvent):void { trace("file open : "+(evt.target as ILoadableFile).urlRequest.url); }
var fileClose:Funnction = function(evt:MassLoadEvent):void { trace("file close : "+(evt.target as ILoadableFile).urlRequest.url); }
var priorityChanged:Function = function(evt:PriorityEvent):void { trace("new priority"); }

//register the events
massloader.addEventListener(Event.OPEN, onOpen);
massloader.addEventListener(ProgressEvent.PROGRESS, onOprogress);
massloader.addEventListener(Event.COMPLETE, onComplete);
massloader.addEventListener(MassLoadEvent.FILE_OPEN, fileOpen);
massloader.addEventListener(MassLoadEvent.FILE_CLOSE, fileClose);
massloader.addEventListener(PriorityEvent.PRIORITY_CHANGED, priorityChanged);

//adding the files
massloader.addPriorizedFile(file1, 10);
massloader.addPriorizedFile(file2, 10);
massloader.addPriorizedFile(file3, 5);

massloader.start();
}}}

{{{
open
file open : file1.swf
file open : file2.swf
progress...
progress...
progress...
file close : file1.swf
file close : file2.swf
new priority
file open : file3.swf
progress...
file close : file3.swf
complete
}}}

= See also =

  * [http://code.google.com/p/masapi/wiki/ParallelFiles Global/Sequential MassLoader]
  * [http://code.google.com/p/masapi/wiki/EventsHandling Events handling]