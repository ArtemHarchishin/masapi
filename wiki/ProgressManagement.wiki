#summary Management of the progress
#labels HOWTO

= Overall progress =

In order to manage the [http://code.google.com/p/masapi/wiki/OverallProgress overall progress], the way is very easy : just register to the `ProgressEvent.PROGRESS` event on your `IMassLoader` instance and you're done !

{{{
import ch.capi.net.*;

//...

var massloader:IMassLoader = new MassLoader();

var onProgress:Function = function(evt:ProgressEvent):void
{
   var pct:uint = Math.floor((evt.bytesLoaded/evt.bytesTotal)*100);
   trace("loaded at "+pct+"%...");
}
massloader.addEventListener(Event.PROGRESS, onProgress);

//...
}}}

The `bytesTotal` and `byteLoaded` values are managed by the `MassLoader` depending of the data you set to your `ILoadableFile` objects.

= Sequential progress =

If you want to manage the loadig of each file independently, its a little bit more complicated, but not so much :) Here you are :

{{{
import ch.capi.net.*;

//...

var massloader:IMassLoader = new MassLoader();

var onProgress:Function = function(evt:ProgressEvent):void
{
   var pct:uint = Math.floor((evt.bytesLoaded/evt.bytesTotal)*100);
   trace("loaded at "+pct+"%...");
}

var onFileOpen:Function = function(evt:MassLoadEvent):void
{
   var file:ILoadableFile = evt.file as ILoadableFile;
   file.addEventListener(ProgressEvent, onProgress);
}

var onFileClose:Function = function(evt:MassLoadEvent):void
{
   var file:ILoadableFile = evt.file as ILoadableFile;
   file.removeEventListener(ProgressEvent.PROGRESS, onProgress);
}

massloader.addEventListener(MassLoadEvent.FILE_OPEN, onFileOpen);
massloader.addEventListener(MassLoadEvent.FILE_CLOSE, onFileClose);

//...
}}}

The tips here is simply to add the listener each time a `ILoadableFile` is being open by the `MassLoader`.

= Listen to specific files =

Seing the previous chapter you should be asking 'if I want to listen to only some files, I'll have to do a check at each time a `ILoadableFile` is open...' => Hopefully not ! There is a very simple way to do such a thing :
{{{
import ch.capi.net.*;

var onEvent:Function = function(evt:Event):void { trace("event : "+evt.type); }

var factory:LoadableFileFactory = new LoadableFileFactory();
var f1:ILoadableFile = factory.create("myFile.swf", null, null, onEvent); //complete event
var f2:ILoadableFile = factory.create("otFile.swf", onEvent); //open event
var f3:ILoadableFile = factory.create("amFile.swf", null, onEvent); //progress event
var f4:ILoadableFile = factory.create("blFile.swf", onEvent, onEvent, onEvent); //open, progress, complete events
}}}